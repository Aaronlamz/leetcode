import{_ as s,c as a,o as n,d as l}from"./app.cfd4c09b.js";const A=JSON.parse('{"title":"Median of Two Sorted Arrays","description":"","frontmatter":{},"headers":[{"level":3,"title":"Example 1:","slug":"example-1","link":"#example-1","children":[]},{"level":3,"title":"Example 2:","slug":"example-2","link":"#example-2","children":[]},{"level":3,"title":"Constraints:","slug":"constraints","link":"#constraints","children":[]},{"level":3,"title":"Solutions","slug":"solutions","link":"#solutions","children":[]}],"relativePath":"md/leetcode/04/index.md"}'),e={name:"md/leetcode/04/index.md"},p=l(`<h1 id="median-of-two-sorted-arrays" tabindex="-1">Median of Two Sorted Arrays <a class="header-anchor" href="#median-of-two-sorted-arrays" aria-hidden="true">#</a></h1><p>Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.</p><p>The overall run time complexity should be O(log (m+n)).</p><h3 id="example-1" tabindex="-1">Example 1: <a class="header-anchor" href="#example-1" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">Input: nums1 = [1,3], nums2 = [2]</span></span>
<span class="line"><span style="color:#A6ACCD;">Output: 2.00000</span></span>
<span class="line"><span style="color:#A6ACCD;">Explanation: merged array = [1,2,3] and median is 2.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="example-2" tabindex="-1">Example 2: <a class="header-anchor" href="#example-2" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">Input: nums1 = [1,2], nums2 = [3,4]</span></span>
<span class="line"><span style="color:#A6ACCD;">Output: 2.50000</span></span>
<span class="line"><span style="color:#A6ACCD;">Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="constraints" tabindex="-1">Constraints: <a class="header-anchor" href="#constraints" aria-hidden="true">#</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">nums1.length == m</span></span>
<span class="line"><span style="color:#A6ACCD;">nums2.length == n</span></span>
<span class="line"><span style="color:#A6ACCD;">0 &lt;= m &lt;= 1000</span></span>
<span class="line"><span style="color:#A6ACCD;">0 &lt;= n &lt;= 1000</span></span>
<span class="line"><span style="color:#A6ACCD;">1 &lt;= m + n &lt;= 2000</span></span>
<span class="line"><span style="color:#A6ACCD;">-10**6 &lt;= nums1[i], nums2[i] &lt;= 10**6</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="solutions" tabindex="-1">Solutions <a class="header-anchor" href="#solutions" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">number[]</span><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">nums1</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">param</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">number[]</span><span style="color:#89DDFF;">}</span><span style="color:#676E95;"> </span><span style="color:#A6ACCD;">nums2</span></span>
<span class="line"><span style="color:#676E95;"> * </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">return</span><span style="color:#676E95;"> </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> findMedianSortedArrays </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">nums1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">nums2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div>`,11),o=[p];function t(r,c,i,d,y,C){return n(),a("div",null,o)}const m=s(e,[["render",t]]);export{A as __pageData,m as default};
